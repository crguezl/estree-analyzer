# estree-analyzer

This repo is a fork of <https://github.com/trevorr/estree-analyzer>

The module performs basic static analysis of JavaScript ASTs in [ESTree](https://github.com/estree/estree) format.

## Installation

```sh
npm install git@github.com:crguezl/estree-analyzer.git
```

You have to install any additional parsers to work:

```
npm i acorn
```

## Usage

```js
import * as acorn from 'acorn'
import * as analyzer  from  'estree-analyzer';

const expressions = [ `'1 + 2 * 3 = ' + (1 + 2 * 3)`, `null`, `[1,2,3]`, `["hi", "world"]`];

expressions.forEach(code => {
    let expr = acorn.parseExpressionAt(code, 0, { ecmaVersion: 2022});
    let analysis = analyzer.analyze(expr);
    console.log(`${code} has type: ${JSON.stringify(analysis, null, 0)}`);
})

let code = `a && a.nested && a.nested.prop`;
let expr = acorn.parseExpressionAt(code, 0, { ecmaVersion: 2022});
let scope = new analyzer.Scope();
analyzer.analyze(expr, scope);
console.log(`scope.members for '${code}' is:\n${JSON.stringify(scope.members, null, 2)}`);
```

The code above outputs the following:

```
'1 + 2 * 3 = ' + (1 + 2 * 3) has type: {"type":"string","value":"1 + 2 * 3 = 7"}
null has type: {"type":"null","value":null}
[1,2,3] has type: {"type":{"kind":"array","elements":"number"},"value":[1,2,3]}
["hi", "world"] has type: {"type":{"kind":"array","elements":"string"},"value":["hi","world"]}
scope.members for 'a && a.nested && a.nested.prop' is:
{
  "a": {
    "name": "a",
    "type": "object",
    "members": {
      "nested": {
        "name": "nested",
        "type": "object",
        "members": {
          "prop": {
            "name": "prop"
          }
        }
      }
    }
  }
}
```

## API Reference

{{>main}}

## License


This repo is a fork of <https://github.com/trevorr/estree-analyzer>

`estree-analyzer` is available under the [ISC license](LICENSE).
